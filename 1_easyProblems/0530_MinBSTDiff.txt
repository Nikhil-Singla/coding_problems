/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    int low;

    int getMinimumDifference(TreeNode* root) 
    {
        helper(root);
        return low;
    }

    void helper(TreeNode* root)
    {
        if(!root) {return;}
        if(root->left) {
            low = min(min, root->val - root->left->val);
            helper(root->left);
        }
        if(root->right) {
            low = min(min, root->right->val - root->val);
            helper(root->right);
        }
    }
};